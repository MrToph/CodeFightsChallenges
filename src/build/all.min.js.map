{"version":3,"sources":["webpack:///webpack/bootstrap 6102fa096d8590c6bd69","webpack:///./src/js/app.jsx","webpack:///./src/js/ArrayMultiDim.jsx","webpack:///./src/js/ArrayDynamic.jsx"],"names":[],"mappings":"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","file":"all.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6102fa096d8590c6bd69\n **/","import { ArrayMultiDimTests } from './ArrayMultiDim';\r\nimport { ArrayDynamicTests } from './ArrayDynamic';\r\n// import MathContainer from './MathContainer'\r\n// import Stepper from './Stepper'\r\n\r\n// let tests = new ArrayMultiDimTests()\r\n// tests.run()\r\nlet tests = new ArrayDynamicTests();\r\ntests.run();\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/app.jsx\n **/","export default class ArrayMultiDim {\r\n  constructor (sizes) {\r\n    if (!Array.isArray(sizes) || sizes.length < 1) throw new Error('not an array or array does not have any dimensions');\r\n    let size = sizes.reduce((acc, x) => acc * x, 1); // multiply all dimension sizes\r\n    this.sizes = sizes;\r\n    this.size = size;\r\n    this.arr = new Array(size);\r\n    this.precomputeAccessValues();\r\n  }\r\n\r\n  get (indices) {\r\n    return this.arr[this.layoutMap(indices)];\r\n  }\r\n\r\n  set (indices, value) {\r\n    this.arr[this.layoutMap(indices)] = value;\r\n  }\r\n\r\n  precomputeAccessValues () {\r\n    this.products = new Array(this.sizes.length).fill(1); // initialize with 1 everywhere\r\n    // last index does not need to be multiplied\r\n    for (let i = this.products.length - 2; i >= 0; i--) {\r\n      this.products[i] *= this.sizes[i + 1] * this.products[i + 1];\r\n    }\r\n  }\r\n\r\n  // row major, i.e. last dimension contiguous\r\n  layoutMap (indices) {\r\n    if (indices.length !== this.sizes.length) throw new Error('indices is of wrong length');\r\n    if (!indices.reduce((acc, val, index) => acc && val >= 0 && val < this.sizes[index], true)) throw new Error('some index is out of bounds');\r\n    return indices.reduce((acc, val, index) => acc + val * this.products[index], 0);\r\n  }\r\n};\r\n\r\nexport class ArrayMultiDimTests {\r\n  run () {\r\n    try {\r\n      let arr = new ArrayMultiDim([]);\r\n      console.log('Failed');\r\n    } catch (e) {\r\n      console.log('Passed. ' + e);\r\n    }\r\n\r\n    try {\r\n      let arr = new ArrayMultiDim('hello');\r\n      console.log('Failed');\r\n    } catch (e) {\r\n      console.log('Passed. ' + e);\r\n    }\r\n\r\n    try {\r\n      let arr = new ArrayMultiDim([5]);\r\n      arr.get([5]);\r\n      console.log('Failed');\r\n    } catch (e) {\r\n      console.log('Passed. ' + e);\r\n    }\r\n\r\n    try {\r\n      let arr = new ArrayMultiDim([3, 5, 4]);\r\n      arr.get([5]);\r\n      console.log('Failed');\r\n    } catch (e) {\r\n      console.log('Passed. ' + e);\r\n    }\r\n\r\n    let arr = new ArrayMultiDim([3, 5, 4]);\r\n    let c = 0;\r\n    for (let i = 0; i < arr.sizes[0]; i++) {\r\n      for (let j = 0; j < arr.sizes[1]; j++) {\r\n        for (let k = 0; k < arr.sizes[2]; k++) {\r\n          arr.set([i, j, k], c++);\r\n        }\r\n      }\r\n    }\r\n    console.log(arr.products);\r\n    console.log(arr.get([2,2,2]));\r\n  }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/ArrayMultiDim.jsx\n **/","export default class ArrayDynamic {\r\n  constructor (capacity) {\r\n    this.top = -1;\r\n    this.growFactor = 2;\r\n    this.shrinkFactor = 0.25;\r\n    this.minCapacity = 4;\t// should be divisible by 1/shrinkfactor for our purposes\r\n    this.capacity = Math.min(this.minCapacity, capacity);\r\n    this.arr = new Array(this.capacity);\r\n  }\r\n\r\n  get (index) {\r\n    if (index < 0 || index >= this.capacity) throw Error('out of bounds');\r\n    return this.arr[index];\r\n  }\r\n\r\n  push (value) {\r\n    this.insertAt(this.top + 1, value);\r\n  }\r\n\r\n  insertAt (index, value) {\r\n    let oldCapacity = this.capacity;\r\n    // make index fit inside our array\r\n    while (index > this.capacity - 1) {\r\n      this.capacity *= this.growFactor;\r\n    }\r\n    // set new top eventually\r\n    let oldTop = this.top;\r\n    this.top = Math.max(this.top, index);\r\n    // have to grow array?\r\n    if (this.top >= this.capacity / this.growFactor) {\r\n      this.capacity *= this.growFactor;\r\n    }\r\n    // copy stuff over\r\n    let newArr;\r\n    if (oldCapacity < this.capacity) { // capacity changed => relocate\r\n      newArr = new Array(this.capacity); // have to create a new one\r\n      // copy from 0 up to insert index or to the old top (if insert index > oldTop)\r\n      for (let i = 0; i < Math.min(index, oldTop + 1); i++) {\r\n        newArr[i] = this.arr[i];\r\n      }\r\n    } else {\r\n      newArr = this.arr; // do it in place\r\n    }\r\n    // only have to shift interval [index, oldTop] one to the right\r\n    // (only happens if inserting before oldTop, i.e. index < oldTop)\r\n    for (let i = oldTop + 1; i > index; i--) {\r\n      newArr[i] = this.arr[i - 1]; // right shift\r\n    }\r\n    newArr[index] = value;\r\n    this.arr = newArr;\r\n  }\r\n\r\n  remove (index) {\r\n    if (index < 0 || index > this.top) throw Error('out of bounds');\r\n    let newTop = this.top;\t// indicates the new top value AFTER shifting to the left (so at the end of the function)\r\n    if (index < this.top) newTop--; // newTop will be the old one just shifted one to the left (because the remove happens to the left of it)\r\n    else { // otherwise have to find newTop by looking for largest index that is not undefined\r\n      newTop = this.top - 1; // index > this.top, index < this.top both doesn't hold => index = top, start one from the left of it to look for non-undefined values\r\n      while (newTop >= 0) {\r\n        if (this.arr[newTop] !== undefined) break;\r\n        newTop--;\r\n      }\r\n    }\r\n    // given newTop we can now check for shrinking the array\r\n    let oldCapacity = this.capacity;\r\n    if (newTop < this.minCapacity * this.shrinkFactor) this.capacity = this.minCapacity;\r\n    while (newTop < this.capacity * this.shrinkFactor && this.capacity > this.minCapacity) {\r\n      this.capacity *= this.shrinkFactor; // no flooring needed as minCapacity is divisible by 4 (1/shrinkfactor)\r\n    }\r\n    this.capacity = Math.max(this.capacity, this.minCapacity);\r\n    // copy stuff over, eventually create new array\r\n    let newArr;\r\n    if (oldCapacity > this.capacity) { // capacity changed => relocate\r\n      newArr = new Array(this.capacity); // have to create a new one\r\n      // copy from 0 up to remove index (=> newTop = top - 1) or up to the new top (if remove index > newTop, i.e. index == top got removed)\r\n      for (let i = 0; i < Math.min(index, newTop + 1); i++) {\r\n        newArr[i] = this.arr[i];\r\n      }\r\n    } else {\r\n      newArr = this.arr; // do it in place\r\n    }\r\n    // only have to shift interval [index+1, top] one to the left\r\n    // (only happens if removing left of top, i.e. index < newTop)\r\n    for (let i = index; i < newTop + 1; i++) {\r\n      newArr[i] = this.arr[i + 1]; // left shift\r\n    }\r\n    delete this.arr[this.top];\t// when we remove, top always decreases, we need to clear this one (again this is only needed when index == top got removed)\r\n    this.top = newTop;\r\n    this.arr = newArr;\r\n  }\r\n};\r\n\r\nexport class ArrayDynamicTests {\r\n  run () {\r\n    let arr = new ArrayDynamic(5);\r\n    this.log(arr);\r\n    for (let i = 1; i < 15; i++) {\r\n      arr.push(i);\r\n      this.log(arr);\r\n    }\r\n    arr.insertAt(0, 0);\r\n    this.log(arr);\r\n    arr.insertAt(49, 50);\r\n    this.log(arr);\r\n    arr.remove(49);\r\n    this.log(arr);\r\n    arr.remove(0);\r\n    this.log(arr);\r\n    for (let i = 0; i < 13; i++) {\r\n      arr.remove(0);\r\n      this.log(arr);\r\n    }\r\n    arr.insertAt(0, 0);\r\n    this.log(arr);\r\n  }\r\n\r\n  log (obj) {\r\n    console.log(obj.arr.slice(), obj.capacity); // create copy\r\n  }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/ArrayDynamic.jsx\n **/"],"sourceRoot":""}